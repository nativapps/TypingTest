

<body onload="addWords()">

<div class="main_wrapper">
  <section class="test" id="test_box">
    <div class="content_test">
      <h3>Typing test Name</h3>
      
        <div id="word-section">
            <div class="waiting">
            </div>
        </div>
        
        <div id="type-section">
          <textarea id="typebox" rows="2" type="text" class="input_test" placeholder="Click or tap here and start typing!" tabindex="1" autofocus onkeyup="typingTest(event)"/>
          </textarea>
        </div>
    </div>
    
      <aside>
      <h5>Time left</h5>
      <div id="timer" class="input_test_aside"><span id="showTime">0:00</span></div>
         <!-- <input class="input_test_aside" type="text" placeholder="1:00" > -->

      <h5>Typing Speed</h5>

      <p>WPM</p>
      <input class="input_test_aside" id = "wpm" type="text">

      <p>Mistyped words</p>
      <!--<input class="input_test_aside" type="text" placeholder="0" >-->
      <input class="input_test_aside" id="count_incorrect" disabled><br>
    <!-- <a href="#" class="button button_line input_aside_cancel">CANCEL</a> -->

    </aside>
  </section>
  
<section class="test-result" id="result_box">
      <h3>Your Typing Test Results </h3>

      <div class="points">
        <p>Typed</p>
        <h2>50</h2>
      </div>

      <div class="points">
        <p>Correct</p>
        <h2>45</h2>
      </div>

      <div class="points">
        <p>Incorrect</p>
        <h2>3</h2>
      </div>

      <div class="points">
        <p>WPM</p>
        <h2>12</h2>
      </div>

      <div class="points">
        <p>Accuracy</p>
        <h2>45</h2>
      </div>

      <div class="wrapper-bar">

        <h4>Your Adjusted Typing speed is <span>Fluent</span></h4>

        <div class="result-bar">
          <div class="measurement">
            <span>
              Slow
            </span>
            <p>0</p>
          </div>

          <div class="measurement">
            <span>
              Average
            </span>
            <p>20</p>
          </div>


          <div class="measurement">
            <span>
              Fluent
            </span>
            <p>40</p>
          </div>


          <div class="measurement">
            <span>
            Fast
            </span>
            <p>60</p>
          </div>

          <div class="measurement">
            <span>
              Pro
            </span>
            <p>80</p>
          </div>

        </div> <!-- .result-bar -->
      </div><!-- .wrapper-bar -->
  <a href="#" class="button">FINISH</a>

    </section>
</div>
    
  <input id="tiempo" value="<%= @time %>" style="display: none">

  <input id="text_test" value="<%= @test.text_test %>" style="display: none">





  <section>
    <div>
      <%#= form_for @report, :url => { :controller => "report", :action => "create" }, :html => {:method => :post} do |r| %>
      <%#= form_for @report, :url => report_path, :html => { :method => :post } %>  
        <input id="count_typed" " style="display: none"><%# r.field disabled %><br>
        <input id="count_correct" disabled " style="display: none"><br>
        <input id="count_incorrect" disabled " style="display: none"><br>
        <input id="total_word" disabled " style="display: none"><br>

        <br>

        <input id="accuracy" disabled " style="display: none"><br>
        <input id="wpm" disabled " style="display: none"><br>
      <%# end %>
    </div>
    <!--<button>
      Enviar y Finalizar
    </button>-->
  </section>
  
  
  <script type="text/javascript" data-turbolinks-eval=false>
  // jQuery like selection of elements.
  window.$ = document.querySelectorAll.bind(document);
  
  // Changes for  Firefox
  if (navigator.userAgent.match(/firefox/i)) {
      // Unicode font sizes
      let ffBtn = "font-weight: normal; font-size: 2em; margin-left: 0.3em;";
      $("#restart-symbol")[0].setAttribute("style", ffBtn);
  
      let ffwait = "line-height: 1em; font-size: 4em;";
      $(".waiting")[0].setAttribute("style", ffwait);
  }

  // Add words to word-section
  
  function addWords() {
      // clear existing word-section
      let wordSection = $("#word-section")[0];
      wordSection.innerHTML = "";
      $("#typebox")[0].value = "";
  
      for (let i = 0; i < wordList.length ; i++) {
          let wordSpan = `<span>${wordList[i]}</span>`;
          wordSection.innerHTML += wordSpan;
      }
      // mark first word as current-word
      wordSection.firstChild.classList.add("current-word");

      // mark last word with magic-box
      // let magicBox = document.createElement("DIV");
      // magicBox.classList.add("magic-box");
      // wordSection.appendChild(magicBox);
  }
  
  //////////////////////////////////////////
  
  // Word Colors
  let colorCurrentWord = "#dddddd";
  let colorCorrectWord = "#93C572";
  let colorIncorrectWord = "#e50000";
  
  // Word Count and other data.
  let text_test = document.getElementById("text_test").value.replace(/[# ]/g, "++").split("++");
  console.log(text_test);
  let wordList = text_test; //["Hola", "Esto,", "funciona"];
  let tiempo = parseInt(document.getElementById("tiempo").value);
  let seconds = tiempo;
  let timePad = seconds < 10 ? "0" + seconds : seconds;
  let minutes = Math.floor(timePad/60);
  let second = Math.floor(timePad % 3600 % 60);
  let showTime = minutes + ":" + ((second < 10) ? "0" + second : second);
  let segundos = 0;
  document.getElementById("showTime").innerHTML = showTime;
  
  let timeInput = showTime;
  
  let wordData = {
    seconds: seconds,
    correct: 0,
    incorrect: 0,
    total: 0,
    typed: 0
  };
  
  //////////////////////////////////////////
  // Initial implementation notes:
  // next word on <space>, if empty, then set value=""
  // after <space> if value == current-word, mark as correct-word
  // else, mark as incorrect-word
  // if value.length != current-word[:value.length], mark as incorrect-word
  // else, mark as current-word
  //////////////////////////////////////////
  

  
  
  function checkIt(currentWord) {
      // how much we have of the current word.
      let current = $(".current-word")[0];
      let currentSubstring = current.innerHTML.substring(0, current.innerHTML.length);
      // check if we have any typing errors
      if (currentWord != currentSubstring) 
          return false;
       else 
          return true;
  }
  
  
  function submitWord(word) {
      // update current-word and
      // keep track of correct & incorrect words
      let current = $(".current-word")[0];

      if (checkIt(word)) {
          //console.log("Correcta ->*"+word.value);
          current.classList.remove("current-word", "incorrect-word-c");
          current.classList.add("correct-word-c");
          wordData.correct += 1;
          document.getElementById("count_correct").value = wordData.correct;
      } else {
         //console.log("Incorrecta ->*"+word.value);
          current.classList.remove("current-word", "incorrect-word-bg");
          current.classList.add("incorrect-word-c");
          wordData.incorrect += 1;
          document.getElementById("count_incorrect").value = wordData.incorrect;
      }
      // update wordData
      wordData.total = wordData.correct + wordData.incorrect;
      document.getElementById("total_word").value = wordData.total;
  
      // make the next word the new current-word.
      current.nextSibling.classList.add("current-word");
      typed_char=0; // SPACE reset to zero
      submitted_words++;
  }

  function goBack(word){
      // update current-word and
      // keep track of correct & incorrect words
      let current = $(".current-word")[0].previousSibling;
      //current.classList.remove("incorrect-word-c", "incorrect-word-bg", "correct-word-bg");
      if (current.classList.value == "correct-word-c") { 
          current.classList.remove("correct-word-c");
          current.classList.add("current-word");
          wordData.correct -= 1;
          document.getElementById("count_correct").value = wordData.correct;
      } else if(current.classList.value == "incorrect-word-c"){
          current.classList.remove("incorrect-word-c", "incorrect-word-bg");
          current.classList.add("current-word");
          wordData.incorrect -= 1;
          document.getElementById("count_incorrect").value = wordData.incorrect;
      }
      // update wordData
      wordData.total = wordData.correct + wordData.incorrect;
      document.getElementById("total_word").value = wordData.total;
  
      // make the next word the new current-word.
      current.classList.add("current-word");
      current.nextSibling.classList.remove("current-word");
  }
  
  function clearLine(sign) { // sign determina si sube o baja el scroll del cuadro de texto. Depende de si viene de SPACE o BACKSPACE
      // remove past words once you get to the next line
      let wordSection = $("#word-section")[0];
      let current = $(".current-word")[0]; // second line (first word)
      let previous = current.previousSibling; // first line (last word)
      console.log("offSet current=>"+current.offsetTop+" previous=>"+previous.offsetTop+"sign=>"+sign)
      if (current.offsetTop > previous.offsetTop)
           wordSection.scrollTop = wordSection.scrollTop + (sign*30);

  }
  
  function isTimer(seconds, timeInput) {
      // BUG: page refresh with keyboard triggers onkeyup and starts timer
      // Use restart button to reset timer
  
      let time = seconds;
      let timeInput2 = timeInput;
      // only set timer once
      let one = $("#timer > span")[0].innerHTML;
      if (one == timeInput2) {
          let typingTimer = setInterval(() => {
              if (time <= 0) {
                  clearInterval(typingTimer);
              } else {
                  time -= 1;
                  let timePad = time < 10 ? "0" + time : time; // zero padded
                  let minutes = Math.floor(timePad/60);
                  let second = Math.floor(timePad % 3600 % 60);
                  let showTime = minutes + ":" + ((second < 10) ? "0"+second : second);
                  $("#timer > span")[0].innerHTML = `${showTime}`;
                  segundos = 60 - second;
              }
          }, 1000);
      } else if (one == "0:00") {
          return false;
      }
      return true;
  }
  
  function speed(wpm)
  {
    if (wpm>=0 && wpm<20) return "Slow";
    if (wpm>20 && wpm<40) return "Average";
    if (wpm>40 && wpm<60) return "Fluent";
    if (wpm>60 && wpm<80) return "Fast";
    if (wpm>80) return "Pro";
  }
  
  
  
  function calculateWPM(data) {
      let { seconds, correct, incorrect, total, typed } = data;
      let min = seconds / 60;
      let wpm = Math.ceil((typed / 5) / min) - incorrect;
      //console.log("here i am " + wpm);
      let accuracy = Math.ceil(correct / total * 100);

      document.getElementById("accuracy").value = accuracy;
      document.getElementById("wpm").value = wpm
  
      if (wpm < 0) {
          wpm = 0;
      } // prevent negative wpm from incorrect words
  
      // template strings are pretty cool
      let results = `<ul id="results">
          <li>WPM: <span class="wpm-value">${wpm}</span></li>
          <li>Accuracy: <span class="wpm-value">${accuracy}%</span></li>
          <li id="results-stats">
          Total Words: <span>${total}</span> |
          Correct Words: <span>${correct}</span> |
          Incorrect Words: <span>${incorrect}</span> |
          Characters Typed: <span>${typed}</span>
          </li>
          </ul>`;
          
      results = `<div class="points">
                <p>Typed</p> 
                <h2>${typed}</h2>
                </div>
                <div class="points">
      <p>Correct</p>
        <h2>${correct}</h2>
      </div>

      <div class="points">
        <p>Incorrect</p>
        <h2>${incorrect}</h2>
      </div>

      <div class="points">
        <p>WPM</p>
        <h2>${wpm}</h2>
      </div>

      <div class="points">
        <p>Accuracy</p>
        <h2>${accuracy}%</h2>
      </div>

      <div class="wrapper-bar">

        <h4>Your Adjusted Typing speed is <span>${speed(wpm)}</span></h4>

        <div class="result-bar">
          <div class="measurement">
            <span>
              Slow
            </span>
            <p>0</p>
          </div>

          <div class="measurement">
            <span>
              Average
            </span>
            <p>20</p>
          </div>


          <div class="measurement">
            <span>
              Fluent
            </span>
            <p>40</p>
          </div>


          <div class="measurement">
            <span>
            Fast
            </span>
            <p>60</p>
          </div>

          <div class="measurement">
            <span>
              Pro
            </span>
            <p>80</p>
          </div>
          <div class="result" id="dial" style="left:${wpm}%">
            <h4>${wpm}</h4>
          </div>
          
        </div> <!-- .result-bar -->
      </div><!-- .wrapper-bar -->
  <a href="#" class="button">FINISH</a>`;
  
      $("#result_box")[0].innerHTML = results;
  
      // color code accuracy
      let wpmClass = $("li:nth-child(2) .wpm-value")[0].classList;
      if (accuracy > 80) {
          wpmClass.add("correct-word-c");
      } else {
          wpmClass.add("incorrect-word-c");
      }

      return wpm;
  }
 
    
  function fastWPM(data) {
      let { seconds, correct, incorrect, total, typed } = data;
      let min = (segundos-seconds) / 60;
      let wpm = Math.ceil((typed / 5) / min) - Math.ceil(incorrect * min);
      let accuracy = Math.ceil(correct / total * 100);
      document.getElementById("accuracy").value = accuracy;
      document.getElementById("wpm").value = wpm
      //console.log("resta ->" + (typed/5 - incorrect) + " tiempo->" + segundos + " wpm-> " + wpm);
      if (wpm < 0) {
          wpm = 0;
      } // prevent negative wpm from incorrect words
      return wpm;
  }
  
  var typed_char=0; //number of characters typed after a SPACE hit
  var delete_soon = false;
  var submitted_words = 0;
  
  function typingTest(e) {
      // Char:        Key Code:
      // <space>      32
      // <backspace>  8
      // <shift>      16
      // [A-Z]        65-90
      // [' "]        222
  
      // Get key code of current key pressed.
      e = e || window.event;
      let kcode = e.keyCode;
      let word = $("#typebox")[0];
      //console.log(word.value);
  
      // check if empty (starts with space)
      if (word.value.match(/^\s/g)) {
          word.value = "";
      } else {
          
          // Only score when timer is on.
          if (isTimer(wordData.seconds, timeInput)) {
              typed_char++;
              // <space> submits words****
              if (kcode == 32){
                  typed_char=0; // Reset to zero after a SPACE hit
                  let split =  word.value.split(" ");
                  let current_word = split[(split.length)-2];
                  submitWord(current_word);
                  clearLine(1); // get rid of old words
                  if (segundos>0)
                      document.getElementById("wpm").value = fastWPM(wordData);

              }
              else if (kcode == 8)
              {
                typed_char--;
                let split =  word.value.split(" ");
                let number_of_spaces = split.length-1;
                //console.log("number of spaces=>"+number_of_spaces+ " submitted words=>" +submitted_words+" word=>*" + word.value+" extract=>*"+split[split.length-1]);
                while (number_of_spaces<submitted_words)
                    {
                       clearLine(-1); // get rid of old words
                       goBack(word);
                       submitted_words--;
                    }
                wordData.typed = word.value.length; // -number of spaces, en caso de querer excluir los espacios
                }
              wordData.typed += 1; // count each valid character typed
              document.getElementById("count_typed").value = wordData.typed;
          } else {
              // Disabling typing text area
               document.getElementById("typebox").disabled="true";
              // Display typing test results.
              // Disabling word-section
              document.getElementById("test_box").style.display="none";
              // Showing results
              document.getElementById("result_box").style.display="block";
              calculateWPM(wordData);
          }
      }

      
  }
  
  
  </script>
</body>